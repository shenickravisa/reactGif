{"ast":null,"code":"//use al inicio significa que es un hook los hooks no son mas que funciones\nimport { useState, useEffect } from \"react\";\nimport { getGif } from \"../helpers/getGif.js\";\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n  useEffect(() => {\n    getGifService(category);\n  }, [category]); //mounted solo se ejecuta una sola vez cuando el componente se monta\n  //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n  //los use effects no pueden ser async\n\n  const getGifService = async category => {\n    try {\n      let res = await getGif(category);\n      setState({\n        data: res,\n        loading: false\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return state; //{data:[], loading: true}\n};","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/hooks/useFetchGifs.js"],"names":["useState","useEffect","getGif","useFetchGifs","category","state","setState","data","loading","getGifService","res","e","console","log"],"mappings":"AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;AAEtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAlC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAACL,QAAD,CAAb;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAPsC,CAUtC;AACA;AACA;;AAEA,QAAMK,aAAa,GAAG,MAAOL,QAAP,IAAoB;AACtC,QAAI;AACA,UAAIM,GAAG,GAAG,MAAMR,MAAM,CAACE,QAAD,CAAtB;AACAE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACG,GADA;AAELF,QAAAA,OAAO,EAAC;AAFH,OAAD,CAAR;AAIH,KAND,CAME,OAAOG,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAVD;;AAaA,SAAON,KAAP,CA3BsC,CA2BzB;AAChB,CA5BM","sourcesContent":["//use al inicio significa que es un hook los hooks no son mas que funciones\n\nimport { useState, useEffect } from \"react\"\nimport { getGif } from \"../helpers/getGif.js\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifService(category)\n    }, [category])\n    //mounted solo se ejecuta una sola vez cuando el componente se monta\n    //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n    //los use effects no pueden ser async\n\n    const getGifService = async (category) => {\n        try {\n            let res = await getGif(category);\n            setState({\n                data:res,\n                loading:false\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n\n    return state //{data:[], loading: true}\n}"]},"metadata":{},"sourceType":"module"}