{"ast":null,"code":"var _jsxFileName = \"/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"; //import GifGridItem from \"./GifGridItem.jsx\";\n//import { getGif } from \"../helpers/getGif.js\";\n\nexport const GifGrid = ({\n  categories\n}) => {\n  // const [images, setImage] = useState([]);\n  // useEffect(() => {\n  //   getGifService(categories);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [categories]);\n  //mounted solo se ejecuta una sola vez cuando el componente se monta\n  //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n  // const getGifService = async (categories) => {\n  //   try {\n  //     let res = await getGif(categories);\n  //     setImage(res);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n  const {\n    loading\n  } = useFetchGifs();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, categories), loading ? 'Cargando...' : 'Data cargada');\n};\nGifGrid.propTypes = {\n  categories: PropTypes.string\n};","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx"],"names":["React","PropTypes","useFetchGifs","GifGrid","categories","loading","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B,C,CACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC1C;AAEC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,QAAM;AAACC,IAAAA;AAAD,MAAYH,YAAY,EAA9B;AAEC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,UAAL,CADF,EAEGC,OAAO,GAAG,aAAH,GAAkB,cAF5B,CADF;AAYD,CAjCM;AAmCPF,OAAO,CAACG,SAAR,GAAoB;AAClBF,EAAAA,UAAU,EAAEH,SAAS,CAACM;AADJ,CAApB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n//import GifGridItem from \"./GifGridItem.jsx\";\n//import { getGif } from \"../helpers/getGif.js\";\n\nexport const GifGrid = ({ categories }) => {\n // const [images, setImage] = useState([]);\n\n  // useEffect(() => {\n  //   getGifService(categories);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [categories]);\n  //mounted solo se ejecuta una sola vez cuando el componente se monta\n  //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n\n  // const getGifService = async (categories) => {\n  //   try {\n  //     let res = await getGif(categories);\n  //     setImage(res);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n\n const {loading} = useFetchGifs()\n\n  return (\n    <div>\n      <h3>{categories}</h3>\n      {loading ? 'Cargando...': 'Data cargada'}\n      {/* <div className=\"card-grid\">\n        {images.map((img, index) => {\n          return <GifGridItem key={index} {...img} />;\n        })}\n      </div>\n      {!images.length && <h1>No hay imagenes que mostrar</h1>} */}\n    </div>\n  );\n};\n\nGifGrid.propTypes = {\n  categories: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}