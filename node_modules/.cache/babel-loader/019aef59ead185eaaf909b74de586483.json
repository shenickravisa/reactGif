{"ast":null,"code":"var _jsxFileName = \"/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GifGridItem from \"./GifGridItem.jsx\";\nimport { getGif } from \"../helpers/getGif.js\";\nexport const GifGrid = ({\n  categories\n}) => {\n  const [images, setImage] = useState([]);\n  useEffect(() => {\n    getGif(categories).then(imgs => setImage(imgs)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categories]); //mounted solo se ejecuta una sola vez cuando el componente se monta\n  //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n\n  const getGifService = async categories => {\n    try {\n      let res = await getGif(categories);\n      setImage(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, categories), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, images.map((img, index) => {\n    return /*#__PURE__*/React.createElement(GifGridItem, Object.assign({\n      key: index\n    }, img, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }\n    }));\n  })), !images.length && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  }, \"No hay imagenes que mostrar\"));\n};\nGifGrid.propTypes = {\n  categories: PropTypes.string\n};","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx"],"names":["React","useState","useEffect","PropTypes","GifGridItem","getGif","GifGrid","categories","images","setImage","then","imgs","getGifService","res","e","console","log","map","img","index","length","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzC,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACE,UAAD,CAAN,CAAmBG,IAAnB,CAAyBC,IAAD,IAAUF,QAAQ,CAACE,IAAD,CAA1C,EADc,CAEd;AACD,GAHQ,EAGN,CAACJ,UAAD,CAHM,CAAT,CAHyC,CAOzC;AACA;;AAEA,QAAMK,aAAa,GAAG,MAAOL,UAAP,IAAsB;AAC1C,QAAI;AACF,UAAIM,GAAG,GAAG,MAAMR,MAAM,CAACE,UAAD,CAAtB;AACAE,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAPD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,UAAL,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACS,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1B,wBAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB,OAA6BD,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CAFF,EAOG,CAACV,MAAM,CAACY,MAAR,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAPrB,CADF;AAWD,CA9BM;AAgCPd,OAAO,CAACe,SAAR,GAAoB;AAClBd,EAAAA,UAAU,EAAEJ,SAAS,CAACmB;AADJ,CAApB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GifGridItem from \"./GifGridItem.jsx\";\nimport { getGif } from \"../helpers/getGif.js\";\n\nexport const GifGrid = ({ categories }) => {\n  const [images, setImage] = useState([]);\n\n  useEffect(() => {\n    getGif(categories).then((imgs) => setImage(imgs));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categories]);\n  //mounted solo se ejecuta una sola vez cuando el componente se monta\n  //categories como dependencia significa que el codigo se estara ejecutando n cantidad de veces mientras cambie de estado la prop\n\n  const getGifService = async (categories) => {\n    try {\n      let res = await getGif(categories);\n      setImage(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div>\n      <h3>{categories}</h3>\n      <div className=\"card-grid\">\n        {images.map((img, index) => {\n          return <GifGridItem key={index} {...img} />;\n        })}\n      </div>\n      {!images.length && <h1>No hay imagenes que mostrar</h1>}\n    </div>\n  );\n};\n\nGifGrid.propTypes = {\n  categories: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}