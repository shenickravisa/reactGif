{"ast":null,"code":"var _jsxFileName = \"/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"; //import GifGridItem from \"./GifGridItem.jsx\";\n\nexport const GifGrid = ({\n  categories\n}) => {\n  // const [images, setImage] = useState([]);\n  const {\n    loading\n  } = useFetchGifs(categories);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, categories), loading ? \"Cargando...\" : \"Data cargada\");\n};\nGifGrid.propTypes = {\n  categories: PropTypes.string\n};","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx"],"names":["React","PropTypes","useFetchGifs","GifGrid","categories","loading","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B,C,CACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,YAAY,CAACE,UAAD,CAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,UAAL,CADF,EAEGC,OAAO,GAAG,aAAH,GAAmB,cAF7B,CADF;AAYD,CAjBM;AAmBPF,OAAO,CAACG,SAAR,GAAoB;AAClBF,EAAAA,UAAU,EAAEH,SAAS,CAACM;AADJ,CAApB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n//import GifGridItem from \"./GifGridItem.jsx\";\n\nexport const GifGrid = ({ categories }) => {\n  // const [images, setImage] = useState([]);\n\n  const { loading } = useFetchGifs(categories);\n\n  return (\n    <div>\n      <h3>{categories}</h3>\n      {loading ? \"Cargando...\" : \"Data cargada\"}\n      {/* <div className=\"card-grid\">\n        {images.map((img, index) => {\n          return <GifGridItem key={index} {...img} />;\n        })}\n      </div>\n      {!images.length && <h1>No hay imagenes que mostrar</h1>} */}\n    </div>\n  );\n};\n\nGifGrid.propTypes = {\n  categories: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}