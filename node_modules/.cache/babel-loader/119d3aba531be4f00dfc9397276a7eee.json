{"ast":null,"code":"var _jsxFileName = \"/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem.jsx\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nexport const GifGrid = ({\n  categories\n}) => {\n  // const [images, setImage] = useState([]);\n  const {\n    data,\n    loading\n  } = useFetchGifs(categories); //{data:images}\n  //significa que crea una copia renombra de data por images\n\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, categories), loading && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"animate__animated animate__flipOutY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"'Cargando...'\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, data.map((img, index) => {\n    return /*#__PURE__*/React.createElement(GifGridItem, Object.assign({\n      onClick: () => {\n        handleClick();\n      },\n      key: index\n    }, img, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }\n    }));\n  })), !data.length && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }, \"No hay imagenes que mostrar\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    message: \"Copiado al porta papeles\",\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"cerrar\"), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\nGifGrid.propTypes = {\n  categories: PropTypes.string\n};","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGrid.jsx"],"names":["React","useState","PropTypes","useFetchGifs","GifGridItem","Snackbar","IconButton","CloseIcon","Button","GifGrid","categories","data","loading","open","setOpen","handleClick","handleClose","map","img","index","length","vertical","horizontal","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzC;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBT,YAAY,CAACO,UAAD,CAAtC,CAHyC,CAIzC;AACA;;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,UAAL,CADF,EAEGE,OAAO,iBACN;AAAG,IAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACM,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,wBAAO,oBAAC,WAAD;AAAc,MAAA,OAAO,EAAE,MAAI;AAACJ,QAAAA,WAAW;AAAG,OAA1C;AAA4C,MAAA,GAAG,EAAEI;AAAjD,OAA4DD,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CALF,EAUG,CAACP,IAAI,CAACS,MAAN,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAVnB,eAWE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAET,IALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,WAPX;AAQE,IAAA,OAAO,EAAC,0BARV;AASE,IAAA,MAAM,eACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,OAAO,EAAEA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,OAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAJF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAuCD,CAvDM;AAyDPP,OAAO,CAACc,SAAR,GAAoB;AAClBb,EAAAA,UAAU,EAAER,SAAS,CAACsB;AADJ,CAApB","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem.jsx\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const GifGrid = ({ categories }) => {\n  // const [images, setImage] = useState([]);\n\n  const { data, loading } = useFetchGifs(categories);\n  //{data:images}\n  //significa que crea una copia renombra de data por images\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <h3>{categories}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flipOutY\">'Cargando...'</p>\n      )}\n      <div className=\"card-grid\">\n        {data.map((img, index) => {\n          return <GifGridItem  onClick={()=>{handleClick()}} key={index} {...img} />;\n        })}\n      </div>\n      {!data.length && <h1>No hay imagenes que mostrar</h1>}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message=\"Copiado al porta papeles\"\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n              cerrar\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n};\n\nGifGrid.propTypes = {\n  categories: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}