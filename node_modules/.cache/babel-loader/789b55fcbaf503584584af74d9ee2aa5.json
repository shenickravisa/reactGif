{"ast":null,"code":"var _jsxFileName = \"/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGridItem.jsx\";\nimport React, { useState } from \"react\";\nimport \"../stylesComponents/gifgrid.scss\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\n\nconst GifGridItem = ({\n  title,\n  url,\n  id\n}) => {\n  const urlCopy = React.createRef();\n\n  const copyUrl = () => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = urlCopy.current.textContent;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand(\"Copy\");\n    textArea.remove();\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      copyUrl();\n    },\n    className: \"card animate__animated animate__fadeInUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: url,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    ref: urlCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, url), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    message: \"Note archived\",\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GifGridItem;\n/**\n *\n */","map":{"version":3,"sources":["/home/cit-capacitacion/Desktop/new cursos/reactFirstSteps/04-intro-react/gif-expert-app/src/components/GifGridItem.jsx"],"names":["React","useState","Snackbar","IconButton","CloseIcon","Button","GifGridItem","title","url","id","urlCopy","createRef","copyUrl","textArea","document","createElement","value","current","textContent","body","appendChild","select","execCommand","remove","open","setOpen","handleClick","handleClose","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kCAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAwB;AAC1C,QAAMC,OAAO,GAAGV,KAAK,CAACW,SAAN,EAAhB;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;AACAF,IAAAA,QAAQ,CAACG,KAAT,GAAiBN,OAAO,CAACO,OAAR,CAAgBC,WAAjC;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,QAA1B;AACAA,IAAAA,QAAQ,CAACQ,MAAT;AACAP,IAAAA,QAAQ,CAACQ,WAAT,CAAqB,MAArB;AACAT,IAAAA,QAAQ,CAACU,MAAT;AACD,GAPD;;AASA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMyB,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,OAAO;AACR,KAHH;AAIE,IAAA,SAAS,EAAC,0CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,GAAG,EAAEJ,GAAV;AAAe,IAAA,GAAG,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAPF,eAQE;AAAG,IAAA,GAAG,EAAEG,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBF,GAAlB,CARF,eASE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZoB,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAEL,IALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,WAPX;AAQE,IAAA,OAAO,EAAC,eARV;AASE,IAAA,MAAM,eACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,OAAO,EAAEA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,OAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAJF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAqCD,CAzDD;;AA2DA,eAAerB,WAAf;AAEA","sourcesContent":["import React, { useState } from \"react\";\nimport \"../stylesComponents/gifgrid.scss\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\n\nconst GifGridItem = ({ title, url, id }) => {\n  const urlCopy = React.createRef();\n  const copyUrl = () => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = urlCopy.current.textContent;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand(\"Copy\");\n    textArea.remove();\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div\n      onClick={() => {\n        copyUrl();\n      }}\n      className=\"card animate__animated animate__fadeInUp\"\n    >\n      <img src={url} alt={title} />\n      <p>{title}</p>\n      <p ref={urlCopy}>{url}</p>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message=\"Note archived\"\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n              UNDO\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n};\n\nexport default GifGridItem;\n\n/**\n *\n */\n"]},"metadata":{},"sourceType":"module"}